import re
from collections import defaultdict

data = """
1
四年级辅导，每次两小时350元
基础怎么样：中等
周次和时间：周一，周三，周四，
上课地点（哪个小区）：宝安西乡，富通城一期
对老师要求（包括性别年龄）：数学或语文方面强的老师

2
年级科目：五年级英语，  ket  pet  新概念
辅导地点：布吉上水径，万科麓城 
辅导时间：周末，协商
每周次数：1 次
对师要求：有丰富的  ket  pet  辅导经验。
课费次薪:  600元/2h

3
初一英语，每周二次课 次数和时间段可以协商，每次两小时500元，宝安中心地铁站附近

SHZXL25052902
【地址】：浦东6号线临沂新村站步行10分钟
【年级】：四年级语数英
【基本情况】：基础一般
【时间】：一周2次，每次2小时，周二周四，暑假继续
【要求】：女大学生，有经验
【课费】：240/2h
 
SHZXL25052602（加急）
【地址】：上海市浦东新区御桥地铁站附近
【年级】： 初二，物理
【基本情况】：女孩，基础一般
【时间】：一周一次，周一到周四可以协商
【要求】：女大学生
【课费】：240/2小时
 
SHXL25052106
【地址】：上海市浦东齐三小区
【年级】： 初三，男孩
【基本情况】：数学，150/90(物理70化学50)（基础比较差，考上高中继续带）
【时间】：一周三次，七点到九点
【要求】： 大学生
【课费】：240/2小时
 
SHXL25052001（机构单）（加急）
【地址】：上海浦东新区周浦万达附近
【年级】： 初中1-3年级
【基本情况】：全科辅导，英语数学为主
【时间】：平时一周两次，暑假一周5次6次都可（早上8：30-17：30，或者9：00-18：00）
【要求】： 985/211大学生
【课费】：500-600/天
 
SHXL25052002（机构单）（加急）
【地址】：上海浦东新区周浦万达附近
【年级】： 高中1-2年级
【基本情况】：理科
【时间】：平时一周两次，暑假一周5次6次都可（早上8：30-17：30，或者9：00-18：00）
【要求】： 985/211大学生
【课费】：600-700/天
 
SHXL25051901（新单来啦，家长人很好）
【地址】：浦东新区康桥阳光大厦
【年级】：高一 女
【基本情况】： 数学，100/不合格
【时间】：一周1次 周六周天，暑假时间协商
【要求】：有经验 女老师
【课费】：320/2h
 
SHXL25051601（新单来啦）
【地址】：上海浦东东方体育地铁站
【年级】： 四年级
【基本情况】：作业辅导
【时间】：周一到周五5-7点，暑假7月份周一到周五上午9-11点
【要求】： 大学生，经验丰富
【课费】：200/2小时
"""

# 用编号分割每条记录（适配数字或SZ开头编号）
records = re.split(r'\n\s*(\d+|SZ\d+)\s*\n', data)
# 去除空项和编号项
records = [r.strip() for r in records if r.strip() and not r.strip().isdigit() and not r.startswith('SZ')]

# 定义更宽松的地点正则
def extract_location(text):
    # 优先匹配带“地点”、“小区”、“地铁”、“辅导地点”、“上课地点”等关键词的行
    patterns = [
        r'(?:上课地点[^\u4e00-\u9fa5]*|辅导地点[^\u4e00-\u9fa5]*|地铁[^\u4e00-\u9fa5]*|小区[^\u4e00-\u9fa5]*|地址[^\u4e00-\u9fa5]*)([\u4e00-\u9fa5A-Za-z0-9，、\- ]+)',
        r'([宝安西乡，富通城一期|布吉上水径，万科麓城|宝安中心地铁站附近]+)',  # 可补充常见地名
        r'([\u4e00-\u9fa5]{2,}(?:地铁站|地铁|小区|附近))'
    ]
    for p in patterns:
        m = re.search(p, text)
        if m:
            return m.group(1).strip('，, ')
    return '未知'

# 其他字段可类似扩展
def extract_info(text):
    info = {}
    info['地点'] = extract_location(text)
    # 你可以继续扩展年级、科目、薪资等字段的提取
    return info

# 提取所有记录
result = [extract_info(r) for r in records]

# 按地点分类
by_location = defaultdict(list)
for item, raw in zip(result, records):
    loc = item.get('地点', '未知')
    by_location[loc].append(raw.strip())

# 输出分类结果
for loc, items in by_location.items():
    print(f"地点：{loc}")
    for i in items:
        print(i)
        print('-'*30)